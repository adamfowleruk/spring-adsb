logging:
  level:
    org:
      springframework:
        web: INFO
spring:
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        ddl-auto: none
        show-sql: true
  datasource:
    type: org.apache.tomcat.jdbc.pool.DataSource
    initialization-mode: always
    initialize: true
    continue-on-error: true
  sql:
    init:
      mode: always
      # The above always creates the DB even if not using an embedded db
      # See schema.sql for details
      # NOTE: DB needs to be pre-created for postgres jdbc to be able to connect
      # TODO consider schema-postgres and schema-mysql variants using sql.init.platform=NAME

# From spring boot 2.3+, see: https://hackmd.io/@ryanjbaxter/spring-on-k8s-workshop#Handling-In-Flight-Requests
server:
  shutdown: graceful

# Expose management API endpoints (for health checks)
# Separating management actuator endpoints onto a non TLS port
# See: https://docs.spring.io/spring-boot/docs/2.5.2/reference/html/actuator.html#actuator.monitoring.customizing-management-server-port
management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
---
# K8S specific properties
spring:
  profiles: k8s
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}

# TODO postgres link here

# E.g. may add Kafka instead of RabbitMQ, or Gemfire instead of Redis as other profiles

# Note for other values see https://docs.spring.io/spring-boot/docs/1.5.6.RELEASE/reference/html/common-application-properties.html